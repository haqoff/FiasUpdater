#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FIASUpdater
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fias")]
	public partial class FIASClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertActualStatus(ActualStatus instance);
    partial void UpdateActualStatus(ActualStatus instance);
    partial void DeleteActualStatus(ActualStatus instance);
    partial void InsertUPDATES(UPDATES instance);
    partial void UpdateUPDATES(UPDATES instance);
    partial void DeleteUPDATES(UPDATES instance);
    partial void InsertAddressObjectType(AddressObjectType instance);
    partial void UpdateAddressObjectType(AddressObjectType instance);
    partial void DeleteAddressObjectType(AddressObjectType instance);
    partial void InsertCenterStatus(CenterStatus instance);
    partial void UpdateCenterStatus(CenterStatus instance);
    partial void DeleteCenterStatus(CenterStatus instance);
    partial void InsertCurrentStatus(CurrentStatus instance);
    partial void UpdateCurrentStatus(CurrentStatus instance);
    partial void DeleteCurrentStatus(CurrentStatus instance);
    partial void InsertEstateStatus(EstateStatus instance);
    partial void UpdateEstateStatus(EstateStatus instance);
    partial void DeleteEstateStatus(EstateStatus instance);
    partial void InsertFlatType(FlatType instance);
    partial void UpdateFlatType(FlatType instance);
    partial void DeleteFlatType(FlatType instance);
    partial void InsertHouse(House instance);
    partial void UpdateHouse(House instance);
    partial void DeleteHouse(House instance);
    partial void InsertHouseStateStatus(HouseStateStatus instance);
    partial void UpdateHouseStateStatus(HouseStateStatus instance);
    partial void DeleteHouseStateStatus(HouseStateStatus instance);
    partial void InsertIntervalStatus(IntervalStatus instance);
    partial void UpdateIntervalStatus(IntervalStatus instance);
    partial void DeleteIntervalStatus(IntervalStatus instance);
    partial void InsertNormativeDocument(NormativeDocument instance);
    partial void UpdateNormativeDocument(NormativeDocument instance);
    partial void DeleteNormativeDocument(NormativeDocument instance);
    partial void InsertNormativeDocumentType(NormativeDocumentType instance);
    partial void UpdateNormativeDocumentType(NormativeDocumentType instance);
    partial void DeleteNormativeDocumentType(NormativeDocumentType instance);
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertOperationStatus(OperationStatus instance);
    partial void UpdateOperationStatus(OperationStatus instance);
    partial void DeleteOperationStatus(OperationStatus instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertStructureStatus(StructureStatus instance);
    partial void UpdateStructureStatus(StructureStatus instance);
    partial void DeleteStructureStatus(StructureStatus instance);
    #endregion
		
		public FIASClassesDataContext() : 
				base(global::FIASUpdater.Properties.Settings.Default.fiasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FIASClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FIASClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FIASClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FIASClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActualStatus> ActualStatus
		{
			get
			{
				return this.GetTable<ActualStatus>();
			}
		}
		
		public System.Data.Linq.Table<UPDATES> UPDATES
		{
			get
			{
				return this.GetTable<UPDATES>();
			}
		}
		
		public System.Data.Linq.Table<AddressObjectType> AddressObjectType
		{
			get
			{
				return this.GetTable<AddressObjectType>();
			}
		}
		
		public System.Data.Linq.Table<CenterStatus> CenterStatus
		{
			get
			{
				return this.GetTable<CenterStatus>();
			}
		}
		
		public System.Data.Linq.Table<CurrentStatus> CurrentStatus
		{
			get
			{
				return this.GetTable<CurrentStatus>();
			}
		}
		
		public System.Data.Linq.Table<EstateStatus> EstateStatus
		{
			get
			{
				return this.GetTable<EstateStatus>();
			}
		}
		
		public System.Data.Linq.Table<FlatType> FlatType
		{
			get
			{
				return this.GetTable<FlatType>();
			}
		}
		
		public System.Data.Linq.Table<House> House
		{
			get
			{
				return this.GetTable<House>();
			}
		}
		
		public System.Data.Linq.Table<HouseStateStatus> HouseStateStatus
		{
			get
			{
				return this.GetTable<HouseStateStatus>();
			}
		}
		
		public System.Data.Linq.Table<IntervalStatus> IntervalStatus
		{
			get
			{
				return this.GetTable<IntervalStatus>();
			}
		}
		
		public System.Data.Linq.Table<NormativeDocument> NormativeDocument
		{
			get
			{
				return this.GetTable<NormativeDocument>();
			}
		}
		
		public System.Data.Linq.Table<NormativeDocumentType> NormativeDocumentType
		{
			get
			{
				return this.GetTable<NormativeDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<Object> Object
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<OperationStatus> OperationStatus
		{
			get
			{
				return this.GetTable<OperationStatus>();
			}
		}
		
		public System.Data.Linq.Table<Room> Room
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<RoomType> RoomType
		{
			get
			{
				return this.GetTable<RoomType>();
			}
		}
		
		public System.Data.Linq.Table<Stead> Stead
		{
			get
			{
				return this.GetTable<Stead>();
			}
		}
		
		public System.Data.Linq.Table<StructureStatus> StructureStatus
		{
			get
			{
				return this.GetTable<StructureStatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActualStatus")]
	public partial class ActualStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACTSTATID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACTSTATIDChanging(int value);
    partial void OnACTSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public ActualStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ACTSTATID
		{
			get
			{
				return this._ACTSTATID;
			}
			set
			{
				if ((this._ACTSTATID != value))
				{
					this.OnACTSTATIDChanging(value);
					this.SendPropertyChanging();
					this._ACTSTATID = value;
					this.SendPropertyChanged("ACTSTATID");
					this.OnACTSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UPDATES")]
	public partial class UPDATES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Version;
		
		private System.DateTime _FactUpdateDate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(System.DateTime value);
    partial void OnVersionChanged();
    partial void OnFactUpdateDateChanging(System.DateTime value);
    partial void OnFactUpdateDateChanged();
    #endregion
		
		public UPDATES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Date NOT NULL")]
		public System.DateTime Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactUpdateDate", DbType="Date NOT NULL")]
		public System.DateTime FactUpdateDate
		{
			get
			{
				return this._FactUpdateDate;
			}
			set
			{
				if ((this._FactUpdateDate != value))
				{
					this.OnFactUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._FactUpdateDate = value;
					this.SendPropertyChanged("FactUpdateDate");
					this.OnFactUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressObjectType")]
	public partial class AddressObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LEVEL;
		
		private string _SCNAME;
		
		private string _SOCRNAME;
		
		private string _KOD_T_ST;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLEVELChanging(int value);
    partial void OnLEVELChanged();
    partial void OnSCNAMEChanging(string value);
    partial void OnSCNAMEChanged();
    partial void OnSOCRNAMEChanging(string value);
    partial void OnSOCRNAMEChanged();
    partial void OnKOD_T_STChanging(string value);
    partial void OnKOD_T_STChanged();
    #endregion
		
		public AddressObjectType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[LEVEL]", Storage="_LEVEL", DbType="Int NOT NULL")]
		public int LEVEL
		{
			get
			{
				return this._LEVEL;
			}
			set
			{
				if ((this._LEVEL != value))
				{
					this.OnLEVELChanging(value);
					this.SendPropertyChanging();
					this._LEVEL = value;
					this.SendPropertyChanged("LEVEL");
					this.OnLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCNAME", DbType="VarChar(10)")]
		public string SCNAME
		{
			get
			{
				return this._SCNAME;
			}
			set
			{
				if ((this._SCNAME != value))
				{
					this.OnSCNAMEChanging(value);
					this.SendPropertyChanging();
					this._SCNAME = value;
					this.SendPropertyChanged("SCNAME");
					this.OnSCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCRNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SOCRNAME
		{
			get
			{
				return this._SOCRNAME;
			}
			set
			{
				if ((this._SOCRNAME != value))
				{
					this.OnSOCRNAMEChanging(value);
					this.SendPropertyChanging();
					this._SOCRNAME = value;
					this.SendPropertyChanged("SOCRNAME");
					this.OnSOCRNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_T_ST", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KOD_T_ST
		{
			get
			{
				return this._KOD_T_ST;
			}
			set
			{
				if ((this._KOD_T_ST != value))
				{
					this.OnKOD_T_STChanging(value);
					this.SendPropertyChanging();
					this._KOD_T_ST = value;
					this.SendPropertyChanged("KOD_T_ST");
					this.OnKOD_T_STChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterStatus")]
	public partial class CenterStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CENTERSTID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCENTERSTIDChanging(int value);
    partial void OnCENTERSTIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public CenterStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CENTERSTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CENTERSTID
		{
			get
			{
				return this._CENTERSTID;
			}
			set
			{
				if ((this._CENTERSTID != value))
				{
					this.OnCENTERSTIDChanging(value);
					this.SendPropertyChanging();
					this._CENTERSTID = value;
					this.SendPropertyChanged("CENTERSTID");
					this.OnCENTERSTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrentStatus")]
	public partial class CurrentStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CURENTSTID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCURENTSTIDChanging(int value);
    partial void OnCURENTSTIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public CurrentStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURENTSTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CURENTSTID
		{
			get
			{
				return this._CURENTSTID;
			}
			set
			{
				if ((this._CURENTSTID != value))
				{
					this.OnCURENTSTIDChanging(value);
					this.SendPropertyChanging();
					this._CURENTSTID = value;
					this.SendPropertyChanged("CURENTSTID");
					this.OnCURENTSTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateStatus")]
	public partial class EstateStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ESTSTATID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESTSTATIDChanging(int value);
    partial void OnESTSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    #endregion
		
		public EstateStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ESTSTATID
		{
			get
			{
				return this._ESTSTATID;
			}
			set
			{
				if ((this._ESTSTATID != value))
				{
					this.OnESTSTATIDChanging(value);
					this.SendPropertyChanging();
					this._ESTSTATID = value;
					this.SendPropertyChanged("ESTSTATID");
					this.OnESTSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(20)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlatType")]
	public partial class FlatType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FLTYPEID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFLTYPEIDChanging(int value);
    partial void OnFLTYPEIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    #endregion
		
		public FlatType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLTYPEID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FLTYPEID
		{
			get
			{
				return this._FLTYPEID;
			}
			set
			{
				if ((this._FLTYPEID != value))
				{
					this.OnFLTYPEIDChanging(value);
					this.SendPropertyChanging();
					this._FLTYPEID = value;
					this.SendPropertyChanged("FLTYPEID");
					this.OnFLTYPEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(50)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.House")]
	public partial class House : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _POSTALCODE;
		
		private string _REGIONCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _HOUSENUM;
		
		private int _ESTSTATUS;
		
		private string _BUILDNUM;
		
		private string _STRUCNUM;
		
		private System.Nullable<int> _STRSTATUS;
		
		private string _HOUSEID;
		
		private string _HOUSEGUID;
		
		private string _AOGUID;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private int _STATSTATUS;
		
		private string _NORMDOC;
		
		private int _COUNTER;
		
		private string _CADNUM;
		
		private int _DIVTYPE;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnREGIONCODEChanging(string value);
    partial void OnREGIONCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnHOUSENUMChanging(string value);
    partial void OnHOUSENUMChanged();
    partial void OnESTSTATUSChanging(int value);
    partial void OnESTSTATUSChanged();
    partial void OnBUILDNUMChanging(string value);
    partial void OnBUILDNUMChanged();
    partial void OnSTRUCNUMChanging(string value);
    partial void OnSTRUCNUMChanged();
    partial void OnSTRSTATUSChanging(System.Nullable<int> value);
    partial void OnSTRSTATUSChanged();
    partial void OnHOUSEIDChanging(string value);
    partial void OnHOUSEIDChanged();
    partial void OnHOUSEGUIDChanging(string value);
    partial void OnHOUSEGUIDChanged();
    partial void OnAOGUIDChanging(string value);
    partial void OnAOGUIDChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnSTATSTATUSChanging(int value);
    partial void OnSTATSTATUSChanged();
    partial void OnNORMDOCChanging(string value);
    partial void OnNORMDOCChanged();
    partial void OnCOUNTERChanging(int value);
    partial void OnCOUNTERChanged();
    partial void OnCADNUMChanging(string value);
    partial void OnCADNUMChanged();
    partial void OnDIVTYPEChanging(int value);
    partial void OnDIVTYPEChanged();
    #endregion
		
		public House()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="VarChar(6)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGIONCODE", DbType="VarChar(2)")]
		public string REGIONCODE
		{
			get
			{
				return this._REGIONCODE;
			}
			set
			{
				if ((this._REGIONCODE != value))
				{
					this.OnREGIONCODEChanging(value);
					this.SendPropertyChanging();
					this._REGIONCODE = value;
					this.SendPropertyChanged("REGIONCODE");
					this.OnREGIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="VarChar(4)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="VarChar(4)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="VarChar(4)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="VarChar(4)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="VarChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="VarChar(11)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="Date NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSENUM", DbType="VarChar(20)")]
		public string HOUSENUM
		{
			get
			{
				return this._HOUSENUM;
			}
			set
			{
				if ((this._HOUSENUM != value))
				{
					this.OnHOUSENUMChanging(value);
					this.SendPropertyChanging();
					this._HOUSENUM = value;
					this.SendPropertyChanged("HOUSENUM");
					this.OnHOUSENUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTSTATUS", DbType="Int NOT NULL")]
		public int ESTSTATUS
		{
			get
			{
				return this._ESTSTATUS;
			}
			set
			{
				if ((this._ESTSTATUS != value))
				{
					this.OnESTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._ESTSTATUS = value;
					this.SendPropertyChanged("ESTSTATUS");
					this.OnESTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUILDNUM", DbType="VarChar(10)")]
		public string BUILDNUM
		{
			get
			{
				return this._BUILDNUM;
			}
			set
			{
				if ((this._BUILDNUM != value))
				{
					this.OnBUILDNUMChanging(value);
					this.SendPropertyChanging();
					this._BUILDNUM = value;
					this.SendPropertyChanged("BUILDNUM");
					this.OnBUILDNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRUCNUM", DbType="VarChar(10)")]
		public string STRUCNUM
		{
			get
			{
				return this._STRUCNUM;
			}
			set
			{
				if ((this._STRUCNUM != value))
				{
					this.OnSTRUCNUMChanging(value);
					this.SendPropertyChanging();
					this._STRUCNUM = value;
					this.SendPropertyChanged("STRUCNUM");
					this.OnSTRUCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRSTATUS", DbType="Int")]
		public System.Nullable<int> STRSTATUS
		{
			get
			{
				return this._STRSTATUS;
			}
			set
			{
				if ((this._STRSTATUS != value))
				{
					this.OnSTRSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STRSTATUS = value;
					this.SendPropertyChanged("STRSTATUS");
					this.OnSTRSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HOUSEID
		{
			get
			{
				return this._HOUSEID;
			}
			set
			{
				if ((this._HOUSEID != value))
				{
					this.OnHOUSEIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEID = value;
					this.SendPropertyChanged("HOUSEID");
					this.OnHOUSEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEGUID", DbType="VarChar(36)")]
		public string HOUSEGUID
		{
			get
			{
				return this._HOUSEGUID;
			}
			set
			{
				if ((this._HOUSEGUID != value))
				{
					this.OnHOUSEGUIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEGUID = value;
					this.SendPropertyChanged("HOUSEGUID");
					this.OnHOUSEGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="VarChar(36)")]
		public string AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="Date NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="Date NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATSTATUS", DbType="Int NOT NULL")]
		public int STATSTATUS
		{
			get
			{
				return this._STATSTATUS;
			}
			set
			{
				if ((this._STATSTATUS != value))
				{
					this.OnSTATSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATSTATUS = value;
					this.SendPropertyChanged("STATSTATUS");
					this.OnSTATSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="VarChar(36)")]
		public string NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTER", DbType="Int NOT NULL")]
		public int COUNTER
		{
			get
			{
				return this._COUNTER;
			}
			set
			{
				if ((this._COUNTER != value))
				{
					this.OnCOUNTERChanging(value);
					this.SendPropertyChanging();
					this._COUNTER = value;
					this.SendPropertyChanged("COUNTER");
					this.OnCOUNTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CADNUM", DbType="NVarChar(1000)")]
		public string CADNUM
		{
			get
			{
				return this._CADNUM;
			}
			set
			{
				if ((this._CADNUM != value))
				{
					this.OnCADNUMChanging(value);
					this.SendPropertyChanging();
					this._CADNUM = value;
					this.SendPropertyChanged("CADNUM");
					this.OnCADNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIVTYPE", DbType="Int NOT NULL")]
		public int DIVTYPE
		{
			get
			{
				return this._DIVTYPE;
			}
			set
			{
				if ((this._DIVTYPE != value))
				{
					this.OnDIVTYPEChanging(value);
					this.SendPropertyChanging();
					this._DIVTYPE = value;
					this.SendPropertyChanged("DIVTYPE");
					this.OnDIVTYPEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HouseStateStatus")]
	public partial class HouseStateStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HOUSESTID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOUSESTIDChanging(int value);
    partial void OnHOUSESTIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public HouseStateStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSESTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HOUSESTID
		{
			get
			{
				return this._HOUSESTID;
			}
			set
			{
				if ((this._HOUSESTID != value))
				{
					this.OnHOUSESTIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSESTID = value;
					this.SendPropertyChanged("HOUSESTID");
					this.OnHOUSESTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntervalStatus")]
	public partial class IntervalStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INTVSTATID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINTVSTATIDChanging(int value);
    partial void OnINTVSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public IntervalStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTVSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INTVSTATID
		{
			get
			{
				return this._INTVSTATID;
			}
			set
			{
				if ((this._INTVSTATID != value))
				{
					this.OnINTVSTATIDChanging(value);
					this.SendPropertyChanging();
					this._INTVSTATID = value;
					this.SendPropertyChanged("INTVSTATID");
					this.OnINTVSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativeDocument")]
	public partial class NormativeDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NORMDOCID;
		
		private string _DOCNAME;
		
		private System.Nullable<System.DateTime> _DOCDATE;
		
		private string _DOCNUM;
		
		private int _DOCTYPE;
		
		private System.Nullable<int> _DOCIMGID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNORMDOCIDChanging(string value);
    partial void OnNORMDOCIDChanged();
    partial void OnDOCNAMEChanging(string value);
    partial void OnDOCNAMEChanged();
    partial void OnDOCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDOCDATEChanged();
    partial void OnDOCNUMChanging(string value);
    partial void OnDOCNUMChanged();
    partial void OnDOCTYPEChanging(int value);
    partial void OnDOCTYPEChanged();
    partial void OnDOCIMGIDChanging(System.Nullable<int> value);
    partial void OnDOCIMGIDChanged();
    #endregion
		
		public NormativeDocument()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOCID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NORMDOCID
		{
			get
			{
				return this._NORMDOCID;
			}
			set
			{
				if ((this._NORMDOCID != value))
				{
					this.OnNORMDOCIDChanging(value);
					this.SendPropertyChanging();
					this._NORMDOCID = value;
					this.SendPropertyChanged("NORMDOCID");
					this.OnNORMDOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNAME", DbType="VarChar(MAX)")]
		public string DOCNAME
		{
			get
			{
				return this._DOCNAME;
			}
			set
			{
				if ((this._DOCNAME != value))
				{
					this.OnDOCNAMEChanging(value);
					this.SendPropertyChanging();
					this._DOCNAME = value;
					this.SendPropertyChanged("DOCNAME");
					this.OnDOCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCDATE", DbType="Date")]
		public System.Nullable<System.DateTime> DOCDATE
		{
			get
			{
				return this._DOCDATE;
			}
			set
			{
				if ((this._DOCDATE != value))
				{
					this.OnDOCDATEChanging(value);
					this.SendPropertyChanging();
					this._DOCDATE = value;
					this.SendPropertyChanged("DOCDATE");
					this.OnDOCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNUM", DbType="VarChar(20)")]
		public string DOCNUM
		{
			get
			{
				return this._DOCNUM;
			}
			set
			{
				if ((this._DOCNUM != value))
				{
					this.OnDOCNUMChanging(value);
					this.SendPropertyChanging();
					this._DOCNUM = value;
					this.SendPropertyChanged("DOCNUM");
					this.OnDOCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTYPE", DbType="Int NOT NULL")]
		public int DOCTYPE
		{
			get
			{
				return this._DOCTYPE;
			}
			set
			{
				if ((this._DOCTYPE != value))
				{
					this.OnDOCTYPEChanging(value);
					this.SendPropertyChanging();
					this._DOCTYPE = value;
					this.SendPropertyChanged("DOCTYPE");
					this.OnDOCTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCIMGID", DbType="Int")]
		public System.Nullable<int> DOCIMGID
		{
			get
			{
				return this._DOCIMGID;
			}
			set
			{
				if ((this._DOCIMGID != value))
				{
					this.OnDOCIMGIDChanging(value);
					this.SendPropertyChanging();
					this._DOCIMGID = value;
					this.SendPropertyChanged("DOCIMGID");
					this.OnDOCIMGIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativeDocumentType")]
	public partial class NormativeDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NDTYPEID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDTYPEIDChanging(int value);
    partial void OnNDTYPEIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public NormativeDocumentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTYPEID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NDTYPEID
		{
			get
			{
				return this._NDTYPEID;
			}
			set
			{
				if ((this._NDTYPEID != value))
				{
					this.OnNDTYPEIDChanging(value);
					this.SendPropertyChanging();
					this._NDTYPEID = value;
					this.SendPropertyChanged("NDTYPEID");
					this.OnNDTYPEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AOGUID;
		
		private string _FORMALNAME;
		
		private string _REGIONCODE;
		
		private string _AUTOCODE;
		
		private string _AREACODE;
		
		private string _CITYCODE;
		
		private string _CTARCODE;
		
		private string _PLACECODE;
		
		private string _PLANCODE;
		
		private string _STREETCODE;
		
		private string _EXTRCODE;
		
		private string _SEXTCODE;
		
		private string _OFFNAME;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _SHORTNAME;
		
		private int _AOLEVEL;
		
		private string _PARENTGUID;
		
		private string _AOID;
		
		private string _PREVID;
		
		private string _NEXTID;
		
		private string _CODE;
		
		private string _PLAINCODE;
		
		private int _ACTSTATUS;
		
		private int _CENTSTATUS;
		
		private int _OPERSTATUS;
		
		private int _CURRSTATUS;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private string _NORMDOC;
		
		private byte _LIVESTATUS;
		
		private int _DIVTYPE;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAOGUIDChanging(string value);
    partial void OnAOGUIDChanged();
    partial void OnFORMALNAMEChanging(string value);
    partial void OnFORMALNAMEChanged();
    partial void OnREGIONCODEChanging(string value);
    partial void OnREGIONCODEChanged();
    partial void OnAUTOCODEChanging(string value);
    partial void OnAUTOCODEChanged();
    partial void OnAREACODEChanging(string value);
    partial void OnAREACODEChanged();
    partial void OnCITYCODEChanging(string value);
    partial void OnCITYCODEChanged();
    partial void OnCTARCODEChanging(string value);
    partial void OnCTARCODEChanged();
    partial void OnPLACECODEChanging(string value);
    partial void OnPLACECODEChanged();
    partial void OnPLANCODEChanging(string value);
    partial void OnPLANCODEChanged();
    partial void OnSTREETCODEChanging(string value);
    partial void OnSTREETCODEChanged();
    partial void OnEXTRCODEChanging(string value);
    partial void OnEXTRCODEChanged();
    partial void OnSEXTCODEChanging(string value);
    partial void OnSEXTCODEChanged();
    partial void OnOFFNAMEChanging(string value);
    partial void OnOFFNAMEChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    partial void OnAOLEVELChanging(int value);
    partial void OnAOLEVELChanged();
    partial void OnPARENTGUIDChanging(string value);
    partial void OnPARENTGUIDChanged();
    partial void OnAOIDChanging(string value);
    partial void OnAOIDChanged();
    partial void OnPREVIDChanging(string value);
    partial void OnPREVIDChanged();
    partial void OnNEXTIDChanging(string value);
    partial void OnNEXTIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnPLAINCODEChanging(string value);
    partial void OnPLAINCODEChanged();
    partial void OnACTSTATUSChanging(int value);
    partial void OnACTSTATUSChanged();
    partial void OnCENTSTATUSChanging(int value);
    partial void OnCENTSTATUSChanged();
    partial void OnOPERSTATUSChanging(int value);
    partial void OnOPERSTATUSChanged();
    partial void OnCURRSTATUSChanging(int value);
    partial void OnCURRSTATUSChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnNORMDOCChanging(string value);
    partial void OnNORMDOCChanged();
    partial void OnLIVESTATUSChanging(byte value);
    partial void OnLIVESTATUSChanged();
    partial void OnDIVTYPEChanging(int value);
    partial void OnDIVTYPEChanged();
    #endregion
		
		public Object()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORMALNAME", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FORMALNAME
		{
			get
			{
				return this._FORMALNAME;
			}
			set
			{
				if ((this._FORMALNAME != value))
				{
					this.OnFORMALNAMEChanging(value);
					this.SendPropertyChanging();
					this._FORMALNAME = value;
					this.SendPropertyChanged("FORMALNAME");
					this.OnFORMALNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGIONCODE", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string REGIONCODE
		{
			get
			{
				return this._REGIONCODE;
			}
			set
			{
				if ((this._REGIONCODE != value))
				{
					this.OnREGIONCODEChanging(value);
					this.SendPropertyChanging();
					this._REGIONCODE = value;
					this.SendPropertyChanged("REGIONCODE");
					this.OnREGIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTOCODE", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AUTOCODE
		{
			get
			{
				return this._AUTOCODE;
			}
			set
			{
				if ((this._AUTOCODE != value))
				{
					this.OnAUTOCODEChanging(value);
					this.SendPropertyChanging();
					this._AUTOCODE = value;
					this.SendPropertyChanged("AUTOCODE");
					this.OnAUTOCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREACODE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string AREACODE
		{
			get
			{
				return this._AREACODE;
			}
			set
			{
				if ((this._AREACODE != value))
				{
					this.OnAREACODEChanging(value);
					this.SendPropertyChanging();
					this._AREACODE = value;
					this.SendPropertyChanged("AREACODE");
					this.OnAREACODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYCODE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string CITYCODE
		{
			get
			{
				return this._CITYCODE;
			}
			set
			{
				if ((this._CITYCODE != value))
				{
					this.OnCITYCODEChanging(value);
					this.SendPropertyChanging();
					this._CITYCODE = value;
					this.SendPropertyChanged("CITYCODE");
					this.OnCITYCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTARCODE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string CTARCODE
		{
			get
			{
				return this._CTARCODE;
			}
			set
			{
				if ((this._CTARCODE != value))
				{
					this.OnCTARCODEChanging(value);
					this.SendPropertyChanging();
					this._CTARCODE = value;
					this.SendPropertyChanged("CTARCODE");
					this.OnCTARCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACECODE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string PLACECODE
		{
			get
			{
				return this._PLACECODE;
			}
			set
			{
				if ((this._PLACECODE != value))
				{
					this.OnPLACECODEChanging(value);
					this.SendPropertyChanging();
					this._PLACECODE = value;
					this.SendPropertyChanged("PLACECODE");
					this.OnPLACECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANCODE", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string PLANCODE
		{
			get
			{
				return this._PLANCODE;
			}
			set
			{
				if ((this._PLANCODE != value))
				{
					this.OnPLANCODEChanging(value);
					this.SendPropertyChanging();
					this._PLANCODE = value;
					this.SendPropertyChanged("PLANCODE");
					this.OnPLANCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREETCODE", DbType="VarChar(4)")]
		public string STREETCODE
		{
			get
			{
				return this._STREETCODE;
			}
			set
			{
				if ((this._STREETCODE != value))
				{
					this.OnSTREETCODEChanging(value);
					this.SendPropertyChanging();
					this._STREETCODE = value;
					this.SendPropertyChanged("STREETCODE");
					this.OnSTREETCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTRCODE", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string EXTRCODE
		{
			get
			{
				return this._EXTRCODE;
			}
			set
			{
				if ((this._EXTRCODE != value))
				{
					this.OnEXTRCODEChanging(value);
					this.SendPropertyChanging();
					this._EXTRCODE = value;
					this.SendPropertyChanged("EXTRCODE");
					this.OnEXTRCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEXTCODE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string SEXTCODE
		{
			get
			{
				return this._SEXTCODE;
			}
			set
			{
				if ((this._SEXTCODE != value))
				{
					this.OnSEXTCODEChanging(value);
					this.SendPropertyChanging();
					this._SEXTCODE = value;
					this.SendPropertyChanged("SEXTCODE");
					this.OnSEXTCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFNAME", DbType="VarChar(120)")]
		public string OFFNAME
		{
			get
			{
				return this._OFFNAME;
			}
			set
			{
				if ((this._OFFNAME != value))
				{
					this.OnOFFNAMEChanging(value);
					this.SendPropertyChanging();
					this._OFFNAME = value;
					this.SendPropertyChanged("OFFNAME");
					this.OnOFFNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="VarChar(6)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="VarChar(4)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="VarChar(4)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="VarChar(4)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="VarChar(4)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="VarChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="VarChar(11)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="Date NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOLEVEL", DbType="Int NOT NULL")]
		public int AOLEVEL
		{
			get
			{
				return this._AOLEVEL;
			}
			set
			{
				if ((this._AOLEVEL != value))
				{
					this.OnAOLEVELChanging(value);
					this.SendPropertyChanging();
					this._AOLEVEL = value;
					this.SendPropertyChanged("AOLEVEL");
					this.OnAOLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENTGUID", DbType="VarChar(36)")]
		public string PARENTGUID
		{
			get
			{
				return this._PARENTGUID;
			}
			set
			{
				if ((this._PARENTGUID != value))
				{
					this.OnPARENTGUIDChanging(value);
					this.SendPropertyChanging();
					this._PARENTGUID = value;
					this.SendPropertyChanged("PARENTGUID");
					this.OnPARENTGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AOID
		{
			get
			{
				return this._AOID;
			}
			set
			{
				if ((this._AOID != value))
				{
					this.OnAOIDChanging(value);
					this.SendPropertyChanging();
					this._AOID = value;
					this.SendPropertyChanged("AOID");
					this.OnAOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREVID", DbType="VarChar(36)")]
		public string PREVID
		{
			get
			{
				return this._PREVID;
			}
			set
			{
				if ((this._PREVID != value))
				{
					this.OnPREVIDChanging(value);
					this.SendPropertyChanging();
					this._PREVID = value;
					this.SendPropertyChanged("PREVID");
					this.OnPREVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEXTID", DbType="VarChar(36)")]
		public string NEXTID
		{
			get
			{
				return this._NEXTID;
			}
			set
			{
				if ((this._NEXTID != value))
				{
					this.OnNEXTIDChanging(value);
					this.SendPropertyChanging();
					this._NEXTID = value;
					this.SendPropertyChanged("NEXTID");
					this.OnNEXTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(17)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAINCODE", DbType="VarChar(15)")]
		public string PLAINCODE
		{
			get
			{
				return this._PLAINCODE;
			}
			set
			{
				if ((this._PLAINCODE != value))
				{
					this.OnPLAINCODEChanging(value);
					this.SendPropertyChanging();
					this._PLAINCODE = value;
					this.SendPropertyChanged("PLAINCODE");
					this.OnPLAINCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTSTATUS", DbType="Int NOT NULL")]
		public int ACTSTATUS
		{
			get
			{
				return this._ACTSTATUS;
			}
			set
			{
				if ((this._ACTSTATUS != value))
				{
					this.OnACTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._ACTSTATUS = value;
					this.SendPropertyChanged("ACTSTATUS");
					this.OnACTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CENTSTATUS", DbType="Int NOT NULL")]
		public int CENTSTATUS
		{
			get
			{
				return this._CENTSTATUS;
			}
			set
			{
				if ((this._CENTSTATUS != value))
				{
					this.OnCENTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CENTSTATUS = value;
					this.SendPropertyChanged("CENTSTATUS");
					this.OnCENTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATUS", DbType="Int NOT NULL")]
		public int OPERSTATUS
		{
			get
			{
				return this._OPERSTATUS;
			}
			set
			{
				if ((this._OPERSTATUS != value))
				{
					this.OnOPERSTATUSChanging(value);
					this.SendPropertyChanging();
					this._OPERSTATUS = value;
					this.SendPropertyChanged("OPERSTATUS");
					this.OnOPERSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRSTATUS", DbType="Int NOT NULL")]
		public int CURRSTATUS
		{
			get
			{
				return this._CURRSTATUS;
			}
			set
			{
				if ((this._CURRSTATUS != value))
				{
					this.OnCURRSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CURRSTATUS = value;
					this.SendPropertyChanged("CURRSTATUS");
					this.OnCURRSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="Date NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="Date NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="VarChar(36)")]
		public string NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIVESTATUS", DbType="TinyInt NOT NULL")]
		public byte LIVESTATUS
		{
			get
			{
				return this._LIVESTATUS;
			}
			set
			{
				if ((this._LIVESTATUS != value))
				{
					this.OnLIVESTATUSChanging(value);
					this.SendPropertyChanging();
					this._LIVESTATUS = value;
					this.SendPropertyChanged("LIVESTATUS");
					this.OnLIVESTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIVTYPE", DbType="Int NOT NULL")]
		public int DIVTYPE
		{
			get
			{
				return this._DIVTYPE;
			}
			set
			{
				if ((this._DIVTYPE != value))
				{
					this.OnDIVTYPEChanging(value);
					this.SendPropertyChanging();
					this._DIVTYPE = value;
					this.SendPropertyChanged("DIVTYPE");
					this.OnDIVTYPEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperationStatus")]
	public partial class OperationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OPERSTATID;
		
		private string _NAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOPERSTATIDChanging(int value);
    partial void OnOPERSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public OperationStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OPERSTATID
		{
			get
			{
				return this._OPERSTATID;
			}
			set
			{
				if ((this._OPERSTATID != value))
				{
					this.OnOPERSTATIDChanging(value);
					this.SendPropertyChanging();
					this._OPERSTATID = value;
					this.SendPropertyChanged("OPERSTATID");
					this.OnOPERSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ROOMGUID;
		
		private string _FLATNUMBER;
		
		private int _FLATTYPE;
		
		private string _ROOMNUMBER;
		
		private System.Nullable<int> _ROOMTYPE;
		
		private string _REGIONCODE;
		
		private string _POSTALCODE;
		
		private System.DateTime _UPDATEDATE;
		
		private string _HOUSEGUID;
		
		private string _ROOMID;
		
		private string _PREVID;
		
		private string _NEXTID;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private byte _LIVESTATUS;
		
		private string _NORMDOC;
		
		private int _OPERSTATUS;
		
		private string _CADNUM;
		
		private string _ROOMCADNUM;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROOMGUIDChanging(string value);
    partial void OnROOMGUIDChanged();
    partial void OnFLATNUMBERChanging(string value);
    partial void OnFLATNUMBERChanged();
    partial void OnFLATTYPEChanging(int value);
    partial void OnFLATTYPEChanged();
    partial void OnROOMNUMBERChanging(string value);
    partial void OnROOMNUMBERChanged();
    partial void OnROOMTYPEChanging(System.Nullable<int> value);
    partial void OnROOMTYPEChanged();
    partial void OnREGIONCODEChanging(string value);
    partial void OnREGIONCODEChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnHOUSEGUIDChanging(string value);
    partial void OnHOUSEGUIDChanged();
    partial void OnROOMIDChanging(string value);
    partial void OnROOMIDChanged();
    partial void OnPREVIDChanging(string value);
    partial void OnPREVIDChanged();
    partial void OnNEXTIDChanging(string value);
    partial void OnNEXTIDChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnLIVESTATUSChanging(byte value);
    partial void OnLIVESTATUSChanged();
    partial void OnNORMDOCChanging(string value);
    partial void OnNORMDOCChanged();
    partial void OnOPERSTATUSChanging(int value);
    partial void OnOPERSTATUSChanged();
    partial void OnCADNUMChanging(string value);
    partial void OnCADNUMChanged();
    partial void OnROOMCADNUMChanging(string value);
    partial void OnROOMCADNUMChanged();
    #endregion
		
		public Room()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOMGUID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string ROOMGUID
		{
			get
			{
				return this._ROOMGUID;
			}
			set
			{
				if ((this._ROOMGUID != value))
				{
					this.OnROOMGUIDChanging(value);
					this.SendPropertyChanging();
					this._ROOMGUID = value;
					this.SendPropertyChanged("ROOMGUID");
					this.OnROOMGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLATNUMBER", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FLATNUMBER
		{
			get
			{
				return this._FLATNUMBER;
			}
			set
			{
				if ((this._FLATNUMBER != value))
				{
					this.OnFLATNUMBERChanging(value);
					this.SendPropertyChanging();
					this._FLATNUMBER = value;
					this.SendPropertyChanged("FLATNUMBER");
					this.OnFLATNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLATTYPE", DbType="Int NOT NULL")]
		public int FLATTYPE
		{
			get
			{
				return this._FLATTYPE;
			}
			set
			{
				if ((this._FLATTYPE != value))
				{
					this.OnFLATTYPEChanging(value);
					this.SendPropertyChanging();
					this._FLATTYPE = value;
					this.SendPropertyChanged("FLATTYPE");
					this.OnFLATTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOMNUMBER", DbType="VarChar(120)")]
		public string ROOMNUMBER
		{
			get
			{
				return this._ROOMNUMBER;
			}
			set
			{
				if ((this._ROOMNUMBER != value))
				{
					this.OnROOMNUMBERChanging(value);
					this.SendPropertyChanging();
					this._ROOMNUMBER = value;
					this.SendPropertyChanged("ROOMNUMBER");
					this.OnROOMNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOMTYPE", DbType="Int")]
		public System.Nullable<int> ROOMTYPE
		{
			get
			{
				return this._ROOMTYPE;
			}
			set
			{
				if ((this._ROOMTYPE != value))
				{
					this.OnROOMTYPEChanging(value);
					this.SendPropertyChanging();
					this._ROOMTYPE = value;
					this.SendPropertyChanged("ROOMTYPE");
					this.OnROOMTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGIONCODE", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string REGIONCODE
		{
			get
			{
				return this._REGIONCODE;
			}
			set
			{
				if ((this._REGIONCODE != value))
				{
					this.OnREGIONCODEChanging(value);
					this.SendPropertyChanging();
					this._REGIONCODE = value;
					this.SendPropertyChanged("REGIONCODE");
					this.OnREGIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="VarChar(6)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="Date NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEGUID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string HOUSEGUID
		{
			get
			{
				return this._HOUSEGUID;
			}
			set
			{
				if ((this._HOUSEGUID != value))
				{
					this.OnHOUSEGUIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEGUID = value;
					this.SendPropertyChanged("HOUSEGUID");
					this.OnHOUSEGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOMID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ROOMID
		{
			get
			{
				return this._ROOMID;
			}
			set
			{
				if ((this._ROOMID != value))
				{
					this.OnROOMIDChanging(value);
					this.SendPropertyChanging();
					this._ROOMID = value;
					this.SendPropertyChanged("ROOMID");
					this.OnROOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREVID", DbType="VarChar(36)")]
		public string PREVID
		{
			get
			{
				return this._PREVID;
			}
			set
			{
				if ((this._PREVID != value))
				{
					this.OnPREVIDChanging(value);
					this.SendPropertyChanging();
					this._PREVID = value;
					this.SendPropertyChanged("PREVID");
					this.OnPREVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEXTID", DbType="VarChar(36)")]
		public string NEXTID
		{
			get
			{
				return this._NEXTID;
			}
			set
			{
				if ((this._NEXTID != value))
				{
					this.OnNEXTIDChanging(value);
					this.SendPropertyChanging();
					this._NEXTID = value;
					this.SendPropertyChanged("NEXTID");
					this.OnNEXTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="Date NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="Date NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIVESTATUS", DbType="TinyInt NOT NULL")]
		public byte LIVESTATUS
		{
			get
			{
				return this._LIVESTATUS;
			}
			set
			{
				if ((this._LIVESTATUS != value))
				{
					this.OnLIVESTATUSChanging(value);
					this.SendPropertyChanging();
					this._LIVESTATUS = value;
					this.SendPropertyChanged("LIVESTATUS");
					this.OnLIVESTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="VarChar(36)")]
		public string NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATUS", DbType="Int NOT NULL")]
		public int OPERSTATUS
		{
			get
			{
				return this._OPERSTATUS;
			}
			set
			{
				if ((this._OPERSTATUS != value))
				{
					this.OnOPERSTATUSChanging(value);
					this.SendPropertyChanging();
					this._OPERSTATUS = value;
					this.SendPropertyChanged("OPERSTATUS");
					this.OnOPERSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CADNUM", DbType="NVarChar(1000)")]
		public string CADNUM
		{
			get
			{
				return this._CADNUM;
			}
			set
			{
				if ((this._CADNUM != value))
				{
					this.OnCADNUMChanging(value);
					this.SendPropertyChanging();
					this._CADNUM = value;
					this.SendPropertyChanged("CADNUM");
					this.OnCADNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOMCADNUM", DbType="NVarChar(1000)")]
		public string ROOMCADNUM
		{
			get
			{
				return this._ROOMCADNUM;
			}
			set
			{
				if ((this._ROOMCADNUM != value))
				{
					this.OnROOMCADNUMChanging(value);
					this.SendPropertyChanging();
					this._ROOMCADNUM = value;
					this.SendPropertyChanged("ROOMCADNUM");
					this.OnROOMCADNUMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomType")]
	public partial class RoomType
	{
		
		private int _RMTYPEID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
		public RoomType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RMTYPEID", DbType="Int NOT NULL")]
		public int RMTYPEID
		{
			get
			{
				return this._RMTYPEID;
			}
			set
			{
				if ((this._RMTYPEID != value))
				{
					this._RMTYPEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="NVarChar(1000)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this._SHORTNAME = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stead")]
	public partial class Stead
	{
		
		private string _STEADGUID;
		
		private string _NUMBER;
		
		private string _REGIONCODE;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _PARENTGUID;
		
		private string _STEADID;
		
		private string _PREVID;
		
		private string _NEXTID;
		
		private int _OPERSTATUS;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private string _NORMDOC;
		
		private byte _LIVESTATUS;
		
		private string _CADNUM;
		
		private int _DIVTYPE;
		
		public Stead()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STEADGUID", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string STEADGUID
		{
			get
			{
				return this._STEADGUID;
			}
			set
			{
				if ((this._STEADGUID != value))
				{
					this._STEADGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="NVarChar(1000)")]
		public string NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this._NUMBER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGIONCODE", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string REGIONCODE
		{
			get
			{
				return this._REGIONCODE;
			}
			set
			{
				if ((this._REGIONCODE != value))
				{
					this._REGIONCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="NVarChar(1000)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this._POSTALCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="NVarChar(1000)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this._IFNSFL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="NVarChar(1000)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this._TERRIFNSFL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="NVarChar(1000)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this._IFNSUL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="NVarChar(1000)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this._TERRIFNSUL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="NVarChar(1000)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this._OKATO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NVarChar(1000)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this._OKTMO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this._UPDATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENTGUID", DbType="NVarChar(1000)")]
		public string PARENTGUID
		{
			get
			{
				return this._PARENTGUID;
			}
			set
			{
				if ((this._PARENTGUID != value))
				{
					this._PARENTGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STEADID", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string STEADID
		{
			get
			{
				return this._STEADID;
			}
			set
			{
				if ((this._STEADID != value))
				{
					this._STEADID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREVID", DbType="NVarChar(1000)")]
		public string PREVID
		{
			get
			{
				return this._PREVID;
			}
			set
			{
				if ((this._PREVID != value))
				{
					this._PREVID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEXTID", DbType="NVarChar(1000)")]
		public string NEXTID
		{
			get
			{
				return this._NEXTID;
			}
			set
			{
				if ((this._NEXTID != value))
				{
					this._NEXTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATUS", DbType="Int NOT NULL")]
		public int OPERSTATUS
		{
			get
			{
				return this._OPERSTATUS;
			}
			set
			{
				if ((this._OPERSTATUS != value))
				{
					this._OPERSTATUS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this._STARTDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this._ENDDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="NVarChar(1000)")]
		public string NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this._NORMDOC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIVESTATUS", DbType="TinyInt NOT NULL")]
		public byte LIVESTATUS
		{
			get
			{
				return this._LIVESTATUS;
			}
			set
			{
				if ((this._LIVESTATUS != value))
				{
					this._LIVESTATUS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CADNUM", DbType="NVarChar(1000)")]
		public string CADNUM
		{
			get
			{
				return this._CADNUM;
			}
			set
			{
				if ((this._CADNUM != value))
				{
					this._CADNUM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIVTYPE", DbType="Int NOT NULL")]
		public int DIVTYPE
		{
			get
			{
				return this._DIVTYPE;
			}
			set
			{
				if ((this._DIVTYPE != value))
				{
					this._DIVTYPE = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructureStatus")]
	public partial class StructureStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STRSTATID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTRSTATIDChanging(int value);
    partial void OnSTRSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    #endregion
		
		public StructureStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STRSTATID
		{
			get
			{
				return this._STRSTATID;
			}
			set
			{
				if ((this._STRSTATID != value))
				{
					this.OnSTRSTATIDChanging(value);
					this.SendPropertyChanging();
					this._STRSTATID = value;
					this.SendPropertyChanged("STRSTATID");
					this.OnSTRSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(20)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
